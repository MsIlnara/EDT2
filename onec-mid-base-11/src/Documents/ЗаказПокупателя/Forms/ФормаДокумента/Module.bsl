
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//<-----Ильнара
	ПолеВвода = Элементы.Найти("нтл_СогласованнаяСкидка");
	Если НЕ ПолеВвода = Неопределено Тогда
		ПолеВвода.УстановитьДействие("ПриИзменении", "нтл_ПриИзмененииСогласованнойСкидки");
	КонецЕсли;
	//<-----Ильнара
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//<-------Ильнара
&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные) 
	
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество; 
	
	//<-------Ильнара
	ТекущиеДанные.Сумма = (ТекущиеДанные.Цена * ТекущиеДанные.Количество) - 
		(ТекущиеДанные.Цена * ТекущиеДанные.Количество * Объект.нтл_СогласованнаяСкидка / 100);
	//<-------Ильнара
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры 
//<-------Ильнара


&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

#Область Доработки

&НаКлиенте
Процедура нтл_КомандаПересчитать(Команда)
	
	Если Объект.Товары.Количество() > 0 Тогда
		Для Каждого Строка Из Объект.Товары Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла;
	КонецЕсли;	
	
	Если Объект.Услуги.Количество()> 0 Тогда
		Для Каждого Строка Из Объект.Услуги Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура нтл_ПересчитатьПриИзмененииПроцентов(Элемент)

		Если объект.нтл_СогласованнаяСкидка > 0 Тогда
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаТовары", ЭтотОбъект);	
		 
		    ПоказатьВопрос(Оповещение, "Пересчитать сумму с учетом скидки?", РежимДиалогаВопрос.ДаНет,
		        0, КодВозвратаДиалога.Да);
		КонецЕсли;

	КонецПроцедуры  
	
&НаКлиенте
Процедура ПослеЗакрытияВопросаТовары(Результат, Параметры) Экспорт  
	
    Если Результат = КодВозвратаДиалога.Да Тогда
		Для Каждого Строка Из Объект.Товары Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла; 
		
		Для Каждого Строка Из Объект.Услуги Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура нтл_ПриИзмененииСогласованнойСкидки(Элемент)

		Если Объект.нтл_СогласованнаяСкидка> 0 Тогда
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект);	
		 
		    ПоказатьВопрос(Оповещение, "Пересчитать сумму с учетом скидки?", РежимДиалогаВопрос.ДаНет,
		        0, КодВозвратаДиалога.Да);
		КонецЕсли;
			
КонецПроцедуры 
	
&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт  
	
    Если Результат = КодВозвратаДиалога.Да Тогда
		Для Каждого Строка Из Объект.Товары Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла; 
		
		Для Каждого Строка Из Объект.Услуги Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти
